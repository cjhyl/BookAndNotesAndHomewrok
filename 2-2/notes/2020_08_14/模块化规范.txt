commonjs规范：
是nodejs的js模块化规范：
1、一个文件就是一个模块
2、每个模块都有单独的作用域
3、通过module.exports导出成员
4、通过require函数载入模块
缺陷：在浏览器环境下因为是同步执行，效率低。


AMD规范：
用于浏览器的模块加载规范AMD(Async Module Definition)，异步模块加载规范。quequire.js实现了该规范，使用示例：
define('module',['jquery','./module2'],function($,module2){
  return {
    start:function(){
      $('body').animate({});
      module2()
    }
  }
})
require(['./module2'],function(module1){
  module1.start()
})
缺陷：使用复杂，模块js文件请求频繁


CMD规范（类似CommonJS规范），后来requireJs兼容了该规范。
define(function(require,exports,module){
  //通过require引入依赖
  var $=require('jquery')
  //通过exports或者module.exports对外暴露成员
  module.exports=function(){
    console.log('module 2')
    $('body').html()
  }
})


最终，nodejs环境下使用commonjs规范，浏览器环境使用esModule规范。