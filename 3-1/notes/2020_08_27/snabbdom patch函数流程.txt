patch(oldVnode,newVnode)
1、把新节点中变化的内容渲染到真实dom，然后返回新节点作为下一次处理的旧节点。
2、对比新旧VNode是否是相同节点(节点的key和sel相同)
3、如果不是相同节点，删除之前的内容，重新渲染
4、如果是相同节点，再判断新的VNode是否有text，如果有并且和oldVnode的text不同，直接更新文本内容
5、如果新的vnode有children，判断子节点是否有变化，判断子节点的过程中使用的就是diff算法
6、diff过程只进行同层级比较