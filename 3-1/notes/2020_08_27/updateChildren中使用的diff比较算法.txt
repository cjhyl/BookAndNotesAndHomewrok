对比新旧节点时，只找同级别的子节点依次比较，然后再找下一级别的节点比较，降低算法复杂度。
同级别节点比较时，通过key和sel判断是否相等，比较分为四种情况：
1、旧新开始节点比较，相同则索引都++，否则进入下一种情况。
2、旧新结束节点比较，相同则索引都--，否则进入下一种情况。
3、旧开始/新结束节点比较，相同则调用pathVnode函数对比和更新节点，把旧开始节点移动到尾部，更新索引，旧节点索引++，新节点索引--。否则进入下一种情况。
4、旧结束/新开始节点比较，相同则调用pathVnode函数对比和更新节点，把旧开始节点移动到首位，更新索引，旧节点索引--，新节点索引++。否则进入下一种情况。
5、遍历所有老节点与新开始节点对比，如果有相同的，则进行对比、更新处理。没有相同的，则是新节点，创建并插入dom。
6、循环结束后，如果旧开始索引>旧结束索引，则老节点数组先遍历完，则新节点有剩余，把剩余节点批量插入新数组尾部。如果新开始索引>新结束索引，则新数组先遍历完，则旧节点有剩余，批量删除剩余节点。