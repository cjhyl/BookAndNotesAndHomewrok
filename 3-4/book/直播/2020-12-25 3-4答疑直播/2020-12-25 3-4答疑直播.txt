prerener-spa-plugin：一个 webpack 插件，可以实现预渲染功能
预渲染：提前生成静态HTML文件，有利于SEO和首屏渲染速度，但不适合包含大量动态数据的场景。
要做到预渲染：
1、把prerener-spa-plugin集成到Vue、React等项目中
2、使用Gridsome、NuxtJS、Next.js等框架
以Vue为例使用prerener-spa-plugin
Vue 中通过 Vue.config.js 中配置 webpack
在 Vue.config.js 中使用 PrerenderSPAPlugin
//注：预渲染，最好使用history模式
const path = require('path')
const PrerenderSPAPlugin = require('prerender-spa-plugin')

const Renderer = PrerenderSPAPlugin.PuppeteerRenderer

module.exports = {
  configureWebpack: {
    plugins: [
      new PrerenderSPAPlugin({
        //原理是使用无头浏览器，类似爬虫
        //预渲染目录，与打包目录一致
        staticDir: path.join(__dirname, 'dist'),
        // 配置哪些路由路径页面预渲染
        routes: [ '/', '/about', '/foo' ],
        renderer: new Renderer({
          renderAfterTime: 5000 // 等待页面加载 5s 后再处理预渲染
          // 等待页面中触发 Document 的 render-event 事件
          // renderAfterDocumentEvent: 'render-event'
          // 等待页面中加载出.post-list元素
          // renderAfterElementExists: '.post-list',
        })
              
      })
    ]

  }
}




nuxtjs打包spa应用：
服务端渲染和预渲染都需要使用history模式，需要后端进行特殊处理。
nuxt.config.js中：
ssr:false







strapi设置https：
实际和strapi关系不大，主要步骤是：
1、获取HTTPS证书
2、在web服务器中配置HTTPS
推荐参考：
//需要配置nginx服务器
https://strapi.io/documentation/developer-docs/latest/deployment/nginx-proxy.html
https://medium.com/@derrickmehaffy/using-strapi-in-production-with-https-717af82d1445
免费申请https的网站：
https://letsencrypt.org







js设计模式：
创建型设计模式

 	1.工厂模式

 	2.建造者模式

 	3.原型模式

 	4.单例模式
结构型设计模式

 	1.外观模式

 	2.适配器模式

 	3.代理模式

 	4.装饰者模式
 	5.组合模式
 
行为型设计模式

 	1.观察者模式

 	2.状态模式

 	3.策略模式

 	4.命令模式

 	5.访问者模式

 	6.中介者模式

 	5.迭代器模式



gridsome使用其他接口数据：
教程只介绍了读取文件数据和strapi数据。
需要使用请求返回的数据：
参考gridsome文档->working with data->importing data->import from APIs
关于作业，还有针对github-api的插件：gridsome-source-github-api
另外，gridsome中的静态化渲染不能使用vuex，只能处理客户端逻辑。




多页面配置：
搜索：vue-cli3 多页
代码拆分搜索：webpack code splitting